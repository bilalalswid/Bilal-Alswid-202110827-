Bilal Alswid (202110827)
Assignment(5)

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

@SuppressWarnings("serial")
public class BallGamePanel extends JPanel {

    int ballX = 0;
    int ballY = 0;
    boolean isBallMoving = true;

    // Updates the ball's position to a random location
    private void updateBallPosition() {
        if (isBallMoving) {
            int randomX = new Random().nextInt(200);
            int randomY = new Random().nextInt(200);
            ballX = randomX;
            ballY = randomY;
        }
    }

    @Override
    public void paintComponent(Graphics graphics) {
        super.paintComponent(graphics);
        Graphics2D graphics2D = (Graphics2D) graphics;
        graphics2D.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        graphics2D.fillOval(ballX, ballY, 30, 30); // Draws the ball
    }

    public static void main(String[] args) throws InterruptedException {
        JFrame applicationFrame = new JFrame("Ball Animation");
        BallGamePanel ballGame = new BallGamePanel();

        applicationFrame.setLayout(null);
        ballGame.setBounds(0, 0, 300, 300); // Panel for ball animation
        applicationFrame.add(ballGame);

        JButton controlButton = new JButton("Stop");
        controlButton.setBounds(100, 320, 100, 30); // Button to toggle animation
        applicationFrame.add(controlButton);

        // Toggles ball movement on button click
        controlButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent event) {
                ballGame.isBallMoving = !ballGame.isBallMoving;
                if (ballGame.isBallMoving) {
                    controlButton.setText("Stop");
                } else {
                    controlButton.setText("Continue");
                }
            }
        });

        applicationFrame.setSize(300, 400);
        applicationFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        applicationFrame.setVisible(true);

        // Continuously updates the ball's position
        while (true) {
            ballGame.updateBallPosition();
            ballGame.repaint();
            Thread.sleep(100);
        }
    }
} 
